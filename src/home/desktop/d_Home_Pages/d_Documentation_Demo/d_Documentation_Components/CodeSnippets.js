const codeSnippets = [

          //! - - API REFERENCE - - !//

    { //* Install the WorkOS SDK 
      id: 0,
        title: "Install the WorkOS SDK",
        doubleHeaders: {
          javascript: [
            {lang1: "npm", lang2: "Yarn"},
          ],
          yarn: [
            {lang1: "npm", lang2: "Yarn"},
          ],
          ruby : [
            {lang1: "Terminal", lang2: "Bundler"}
          ],
          bundler: [
            {lang1: "Terminal", lang2: "Bundler"}
          ],
          java : [
            {lang1: "Maven", lang2: "Gradle"}
          ],
          gradle: [
            {lang1: "Maven", lang2: "Gradle"}
          ]
        },
        code: {
          javascript: [
            '$ <span style="color: #5854c6;">npm install</span> @workos-inc/node'
          ],
          npm: [
            '$ <span style="color: #5854c6;">npm install</span> @workos-inc/node'
          ],
          yarn: [
            '$ <span style="color: #5854c6;">yarn add</span> @workos-inc/node'
          ],
          ruby: [
            '$ gem <span style="color: #5854c6;">install</span> workos'
          ],
          terminal: [
            '$ gem <span style="color: #5854c6;">install</span> workos'
          ],
          bundler: [
            '1 gem "workos"'
          ],
          python: [
            '$ pip <span style="color: #5854c6;">install</span> workos'
          ],
          go: [
            '$ go get -u github.com/workos/workos-go/...'
          ],
          php: [
            '$ <span style="color: #5854c6;">composer</span> require workos/workos-php'
          ],
          laravel: [
            '$ <span style="color: #5854c6;">composer</span> require workos/workos-php-laravel'
          ],
          java: [
            '1 <span style="color: #0072dd;">dependency</span>>',
            '2     &lt<span style="color: #0072dd;">groupId</span>&gtcom.workos&lt/<span style="color: #0072dd;">groupId</span>>',
            '3     &lt<span style="color: #0072dd;">artifactId</span>&gtworkos&lt/<span style="color: #0072dd;">artifactId</span>>',
            '4     &lt<span style="color: #0072dd;">version</span>&gt{version}&lt/<span style="color: #0072dd;">version</span>>',
            '5 &lt/<span style="color: #0072dd;">dependency</span>>'
          ],
          maven: [
            '1 <<span style="color: #0072dd;">dependency</span>>',
            '2     &lt<span style="color: #0072dd;">groupId</span>&gtcom.workos&lt/<span style="color: #0072dd;">groupId</span>>',
            '3     &lt<span style="color: #0072dd;">artifactId</span>&gtworkos&lt/<span style="color: #0072dd;">artifactId</span>>',
            '4     &lt<span style="color: #0072dd;">version</span>&gt{version}&lt/<span style="color: #0072dd;">version</span>>',
            '5 &lt/<span style="color: #0072dd;">dependency</span>>'
          ],
          gradle: [
            '1 dependencies {',
            '2     implementation <span style="color: #143465;">\'com.workos:workos:VERSION\'</span>',
            '3 }'
          ],
          dotnet: [
            '$ nuget <span style="color: #5854c6;">install</span> WorkOS.net'
          ],
        }
    },
    
    { //* Set API Key
        id: 1,
        title: "Set API Key",
        code: {
          curl: [
            '$ <span style="color: #5854c6;">curl</span> https://api.workos.com/directories \\',
            '&gt     --header <span style="color: #143465;">"Authorization: Bearer</span> <span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>',
          ],
          javascript: [
            '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span>  <span style="color: #143465;">\'@workos-inc/node\'</span>;',
            '2 ',
            '3 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>\');',
          ],
          npm: [
            '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span>  <span style="color: #143465;">\'@workos-inc/node\'</span>;',
            '2 ',
            '3 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>\');',
          ],
          yarn: [
            '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span>  <span style="color: #143465;">\'@workos-inc/node\'</span>;',
            '2 ',
            '3 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>\');',
          ],
          ruby: [
            '1 <span style="color: #148a68;">require</span> "workos"',
            '2 ',
            '3 WorkOS.configure do <span style="color: #ce3559;">|</span>config<span style="color: #ce3559;">|</span>',
            '4 \tconfig.key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"',
            '5 <span style="color: #148a68;">end</span>',
          ],
          terminal: [
            '1 <span style="color: #148a68;">require</span> "workos"',
            '2 ',
            '3 WorkOS.configure do <span style="color: #ce3559;">|</span>config<span style="color: #ce3559;">|</span>',
            '4 \tconfig.key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"',
            '5 <span style="color: #148a68;">end</span>',
          ],
          bundler: [
            '1 <span style="color: #148a68;">require</span> "workos"',
            '2 ',
            '3 WorkOS.configure do <span style="color: #ce3559;">|</span>config<span style="color: #ce3559;">|</span>',
            '4 \tconfig.key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"',
            '5 <span style="color: #148a68;">end</span>',
          ],
          python: [
            '1 <span style="color: #148a68;">import</span> workos',
            '2 ',
            '3 workos.api_key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"'
          ],
          go : [
            '1 <span style="color: #148a68;">package</span> main',
            '2 ',
            '3 <span style="color: #148a68;">import</span> (',
            '4 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/audittrail"</span>',
            '5 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/directorysync"</span>',
            '6 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/organizations"</span>',
            '7 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/passwordless"</span>',
            '8 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/portal"</span>',
            '9 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/sso"</span>',
            '10 )',
            '11 ',
            '12 <span style="color: #148a68;">func</span> <span style="color: #5854c6;">main</span>() {',
            '13 \t  sso.<span style="color: #5854c6;">Configure</span>(',
            '14 \t\t  "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>",',
            '15 \t\t  "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>",',
            '16 \t\t  <span style="color: #143465;">"https://foo-corp.com/redirect-uri"</span>,',
            '17 \t  )',
            '18 ',
            '19 \t  organizations.<span style="color: #5854c6;">SetAPIKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>")',
            '20 ',
            '21 \t  passwordless.<span style="color: #5854c6;">SetAPIKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>")',
            '22 ',
            '23 \t  directorysync.<span style="color: #5854c6;">SetAPIKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>")',
            '24 ',
            '25 \t  audittrail.<span style="color: #5854c6;">SetAPIKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>")',
            '26 ',
            '27 \t  portal.<span style="color: #5854c6;">SetAPIKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>")',
            '28 }',
          ],
          php : [
            '1 <span style="color: #8b8d98;">&lt?php</span>',
            '2 ',
            '3 WorkOS\\WorkOS::<span style="color: #5854c6;">setApiKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");'
          ],
          laravel : [
            '1 <span style="color: #8b8d98;">&lt?php</span>',
            '2 ',
            '3 WorkOS\\WorkOS::<span style="color: #5854c6;">setApiKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");'
          ],
          java : [
            '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">WorkOS</span>;',
            '2 ',
            '3 <span style="color: #5854c6;">WorkOS</span> work_os <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");'
          ],
          maven: [
            '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">WorkOS</span>;',
            '2 ',
            '3 <span style="color: #5854c6;">WorkOS</span> work_os <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");'
          ],
          gradle: [
            '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">WorkOS</span>;',
            '2 ',
            '3 <span style="color: #5854c6;">WorkOS</span> work_os <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");'
          ],
          dotnet : [
            '1 WorkOS.<span style="color: #5854c6;">SetApiKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");'
          ],
          // Add more languages and their respective lines of code
        },
    },

    { //* Pagination
        id: 2,
        title: "Pagination",
        doubleHeaders: {
          javascript: [
            {lang1: "Request", lang2: "Response"},
          ],
          curl: [
            {lang1: "Request", lang2: "Response"},
          ],
          ruby: [
            {lang1: "Request", lang2: "Response"},
          ],
          python: [
            {lang1: "Request", lang2: "Response"},
          ],
          go: [
            {lang1: "Request", lang2: "Response"},
          ],
          php: [
            {lang1: "Request", lang2: "Response"},
          ],
          laravel: [
            {lang1: "Request", lang2: "Response"},
          ],
          java: [
            {lang1: "Request", lang2: "Response"},
          ],
          dotnet: [
            {lang1: "Request", lang2: "Response"},
          ],
          json: [
            {lang1: "Request", lang2: "Response"},
          ]
        },
        code: {
          curl: [
            '<span style="color: #8b8d98;">$</span> <span style="color: #5854c6;">curl</span> https://api.workos.com/connections?limit<span style="color: #ce3559;">=</span><span style="color: #0072dd;">100</span> \\',
            '<span style="color: #8b8d98;">&gt</span>     --header <span style="color: #143465;">"Authorization: Bearer</span> <span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>'
          ],
          javascript: [
            '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span>  <span style="color: #143465;">\'@workos-inc/node\'</span>;',
            '2 ',
            '3 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>\');',
            '4 ',
            '5 <span style="color: #148a68;">let</span> list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>({ limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'desc\'</span> });',
            '6 <span style="color: #148a68;">let</span> connections <span style="color: #ce3559;">=</span> list.data;',
            '7 <span style="color: #148a68;">let</span> after <span style="color: #ce3559;">=</span> list.listMetadata.after;',
            '8 ',
            '9 <span style="color: #148a68;">while</span> (after) {',
            '10     list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>({',
            '11         limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>,',
            '12         after<span style="color: #ce3559;">:</span> after,',
            '13         order<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'desc\'</span>,',
            '14      )};',
            '15      connections <span style="color: #ce3559;">=</span> connections.<span style="color: #5854c6;">concat</span>(list.data);',
            '16      after <span style="color: #ce3559;">=</span> list.listMetadata.after;',
            '17 };',
          ],
          npm: [
            '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span>  <span style="color: #143465;">\'@workos-inc/node\'</span>;',
            '2 ',
            '3 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>\');',
            '4 ',
            '5 <span style="color: #148a68;">let</span> list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>({ limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'desc\'</span> });',
            '6 <span style="color: #148a68;">let</span> connections <span style="color: #ce3559;">=</span> list.data;',
            '7 <span style="color: #148a68;">let</span> after <span style="color: #ce3559;">=</span> list.listMetadata.after;',
            '8 ',
            '9 <span style="color: #148a68;">while</span> (after) {',
            '10     list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>({',
            '11         limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>,',
            '12         after<span style="color: #ce3559;">:</span> after,',
            '13         order<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'desc\'</span>,',
            '14      )};',
            '15      connections <span style="color: #ce3559;">=</span> connections.<span style="color: #5854c6;">concat</span>(list.data);',
            '16      after <span style="color: #ce3559;">=</span> list.listMetadata.after;',
            '17 };',
          ],
          yarn: [
            '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span>  <span style="color: #143465;">\'@workos-inc/node\'</span>;',
            '2 ',
            '3 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789"</span>\');',
            '4 ',
            '5 <span style="color: #148a68;">let</span> list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>({ limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'desc\'</span> });',
            '6 <span style="color: #148a68;">let</span> connections <span style="color: #ce3559;">=</span> list.data;',
            '7 <span style="color: #148a68;">let</span> after <span style="color: #ce3559;">=</span> list.listMetadata.after;',
            '8 ',
            '9 <span style="color: #148a68;">while</span> (after) {',
            '10     list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>({',
            '11         limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>,',
            '12         after<span style="color: #ce3559;">:</span> after,',
            '13         order<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'desc\'</span>,',
            '14      )};',
            '15      connections <span style="color: #ce3559;">=</span> connections.<span style="color: #5854c6;">concat</span>(list.data);',
            '16      after <span style="color: #ce3559;">=</span> list.listMetadata.after;',
            '17 };',
          ],
          ruby: [
            '1 <span style="color: #148a68;">require</span> "workos"',
            '2 ',
            '3 WorkOS.configure <span style="color: #148a68;">do</span> <span style="color: #ce3559;">|</span>config<span style="color: #ce3559;">|</span>',
            '4     config.key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"',
            '5 <span style="color: #148a68;">end</span>',
            '6 ',
            '7 <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list</span> <span style="color: #ce3559;">=</span> WorkOS::<span style="color: #0072dd;">SSO</span>.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"desc"</span>)',
            '8 connections <span style="color: #ce3559;">=</span> connections.data',
            '9 after <span style="color: #ce3559;">=</span> connections.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_metadata</span>[<span style="color: #143465;">"after"</span>]',
            '10 ',
            '11 <span style="color: #148a68;">until</span> after.<span style="color: #148a68;">nil</span><span style="color: #ce3559;">?</span>',
            '12     <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">current_page</span> <span style="color: #ce3559;">=</span> WorkOS::SSO.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(after<span style="color: #ce3559;">:</span> after, limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"desc"</span>)',
            '13     connections <span style="color: #ce3559;">=</span> connections.concat(current_page.data)',
            '14     after <span style="color: #ce3559;">=</span> current_page.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_metadata</span>[<span style="color: #143465;">"after"</span>]',
            '15 <span style="color: #148a68;">end</span>',
          ],
          terminal: [
            '1 <span style="color: #148a68;">require</span> "workos"',
            '2 ',
            '3 WorkOS.configure <span style="color: #148a68;">do</span> <span style="color: #ce3559;">|</span>config<span style="color: #ce3559;">|</span>',
            '4     config.key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"',
            '5 <span style="color: #148a68;">end</span>',
            '6 ',
            '7 <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list</span> <span style="color: #ce3559;">=</span> WorkOS::<span style="color: #0072dd;">SSO</span>.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"desc"</span>)',
            '8 connections <span style="color: #ce3559;">=</span> connections.data',
            '9 after <span style="color: #ce3559;">=</span> connections.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_metadata</span>[<span style="color: #143465;">"after"</span>]',
            '10 ',
            '11 <span style="color: #148a68;">until</span> after.<span style="color: #148a68;">nil</span><span style="color: #ce3559;">?</span>',
            '12     <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">current_page</span> <span style="color: #ce3559;">=</span> WorkOS::SSO.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(after<span style="color: #ce3559;">:</span> after, limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"desc"</span>)',
            '13     connections <span style="color: #ce3559;">=</span> connections.concat(current_page.data)',
            '14     after <span style="color: #ce3559;">=</span> current_page.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_metadata</span>[<span style="color: #143465;">"after"</span>]',
            '15 <span style="color: #148a68;">end</span>',
          ],
          bundler: [
            '1 <span style="color: #148a68;">require</span> "workos"',
            '2 ',
            '3 WorkOS.configure <span style="color: #148a68;">do</span> <span style="color: #ce3559;">|</span>config<span style="color: #ce3559;">|</span>',
            '4     config.key <span style="color: #ce3559;">=</span> "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>"',
            '5 <span style="color: #148a68;">end</span>',
            '6 ',
            '7 <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list</span> <span style="color: #ce3559;">=</span> WorkOS::<span style="color: #0072dd;">SSO</span>.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"desc"</span>)',
            '8 connections <span style="color: #ce3559;">=</span> connections.data',
            '9 after <span style="color: #ce3559;">=</span> connections.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_metadata</span>[<span style="color: #143465;">"after"</span>]',
            '10 ',
            '11 <span style="color: #148a68;">until</span> after.<span style="color: #148a68;">nil</span><span style="color: #ce3559;">?</span>',
            '12     <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">current_page</span> <span style="color: #ce3559;">=</span> WorkOS::SSO.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(after<span style="color: #ce3559;">:</span> after, limit<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"desc"</span>)',
            '13     connections <span style="color: #ce3559;">=</span> connections.concat(current_page.data)',
            '14     after <span style="color: #ce3559;">=</span> current_page.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_metadata</span>[<span style="color: #143465;">"after"</span>]',
            '15 <span style="color: #148a68;">end</span>',
          ],
          python: [
            '1 <span style="color: #148a68;">import</span> workos',
            '2 ',
            '3 <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">response</span> <span style="color: #ce3559;">=</span> workos.client.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(limit<span style="color: #ce3559;">=</span><span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">=</span><span style="color: #143465;">"desc"</span>)',
            '4 connections <span style="color: #ce3559;">=</span> response[<span style="color: #143465;">"data"</span>]',
            '5 after <span style="color: #ce3559;">=</span> response[<span style="color: #143465;">"listMetadata"</span>][<span style="color: #143465;">"after"</span>]',
            '6 ',
            '7 <span style="color: #148a68;">while</span> after <span style="color: #148a68;">is not</span> <span style="color: #0072dd;">None</span>:',
            '8    <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">response</span> <span style="color: #ce3559;">=</span> workos.client.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list_connections</span>(limit<span style="color: #ce3559;">=</span><span style="color: #0072dd;">100</span>, order<span style="color: #ce3559;">=</span><span style="color: #143465;">"desc"</span>, after<span style="color: #ce3559;">=</span>after)',
            '9    <span style="color: #148a68;">for</span> i <span style="color: #148a68;">in</span> response[<span style="color: #143465;">"data"</span>]:',
            '10       connections.append(i)',
            '11   after <span style="color: #ce3559;">=</span> response[<span style="color: #143465;">"listMetadata"</span>][<span style="color: #143465;">"after"</span>]'
          ],
          go: [
            '1 <span style="color: #148a68;">package</span> main',
            '2 ',
            '3 <span style="color: #148a68;">import</span> (',
            '4 \t  <span style="color: #143465;">"context"</span>',
            '5 ',
            '6 \t  <span style="color: #143465;">"github.com/workos/workos-go/v3/pkg/sso"</span>',
            '7 )',
            '8 ',
            '9 <span style="color: #148a68;">func</span> <span style="color: #5854c6;">main</span>() {',
            '10 \t  sso.<span style="color: #5854c6;">Configure</span>(',
            '11 \t\t  "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>",',
            '12 \t\t  "<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789"</span>",',
            '13 \t  )',
            '14 ',
            '15 \t  <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list</span>, err <span style="color: #ce3559;">:=</span> sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListConnections</span>(',
            '16 \t\t  context.<span style="color: #5854c6;">Background</span>(),',
            '17 \t\t  sso.ListConnectionsOpts{Limit: <span style="color: #0072dd;">100</span>, Order: <span style="color: #143465;">"desc"</span>},',
            '18 \t  )',
            '19 ',
            '20 \t  connections <span style="color: #ce3559;">:=</span> list.Data',
            '21 \t  after <span style="color: #ce3559;">:=</span> list.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListMetadata</span>.After',
            '22 ',
            '23 \t  <span style="color: #148a68;">for</span> len(before) > <span style="color: #0072dd;">0</span> {',
            '24 \t\t  <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">currentPage</span>, err <span style="color: #ce3559;">:=</span> sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListConnections</span>(',
            '25 \t\t\t  context.<span style="color: #5854c6;">Background</span>(),',
            '26 \t\t\t  sso.ListConnectionsOpts{Limit: <span style="color: #0072dd;">100</span>, Order: <span style="color: #143465;">"desc"</span>, After: after},',
            '27 \t\t  )',
            '28 ',
            '29 \t\t  <span style="color: #148a68;">if</span> err <span style="color: #ce3559;">!=</span> <span style="color: #0072dd;">nil</span> {',
            '30 \t\t\t  <span style="color: #8b8d98;">// Handle the error...</span>',
            '31 \t\t\t  <span style="color: #148a68;">return</span>',
            '32 \t\t  }',
            '33 ',
            '34 \t\t  connections <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">append</span>(connections, currentPage.Data...)',
            '35 \t\t  after <span style="color: #ce3559;">=</span> currentPage.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListMetadata</span>.After',
            '36 \t  }',
            '37 }',
          ],
          php: [
            '1 <span style="color: #8b8d98;">&lt?php</span>',
            '2 ',
            '3 WorkOS\\WorkOS::<span style="color: #5854c6;">setApiKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");',
            '4 ',
            '5 $sso <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>\\<span style="color: #5854c6;">SSO</span>();',
            '6 ',
            '7 [$before, $after, $connections] <span style="color: #ce3559;">=</span> $sso<span style="color: #ce3559;">-></span><span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(',
            '8     limit: <span style="color: #0072dd;">100</span>,',
            '9     order: <span style="color: #143465;">"desc"</span>',
            '10 )',
            '11 ',
            '12 <span style="color: #148a68;">while</span> ($after) {',
            '3     [$before, $after, $connections] <span style="color: #ce3559;">=</span> $sso<span style="color: #ce3559;">-></span><span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(',
            '14         limit: <span style="color: #0072dd;">100</span>,',
            '15         after: $after,',
            '16         order: <span style="color: #143465;">"desc"</span>',
            '17    );',
            '18 ',
            '19    $connections <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">array_merge</span>($connections, $currentPage);',
            '20 }'
          ],
          laravel: [
            '1 <span style="color: #8b8d98;">&lt?php</span>',
            '2 ',
            '3 WorkOS\\WorkOS::<span style="color: #5854c6;">setApiKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");',
            '4 ',
            '5 $sso <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>\\<span style="color: #5854c6;">SSO</span>();',
            '6 ',
            '7 [$before, $after, $connections] <span style="color: #ce3559;">=</span> $sso<span style="color: #ce3559;">-></span><span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(',
            '8     limit: <span style="color: #0072dd;">100</span>,',
            '9     order: <span style="color: #143465;">"desc"</span>',
            '10 )',
            '11 ',
            '12 <span style="color: #148a68;">while</span> ($after) {',
            '3     [$before, $after, $connections] <span style="color: #ce3559;">=</span> $sso<span style="color: #ce3559;">-></span><span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(',
            '14         limit: <span style="color: #0072dd;">100</span>,',
            '15         after: $after,',
            '16         order: <span style="color: #143465;">"desc"</span>',
            '17    );',
            '18 ',
            '19    $connections <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">array_merge</span>($connections, $currentPage);',
            '20 }'
          ],
          java: [
            '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">WorkOS</span>;',
            '2 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">sso</span>.<span style="color: #5854c6;">SsoApi</span>.<span style="color: #5854c6;">ListConnectionsOptions</span>;',
            '3 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">sso</span>.<span style="color: #5854c6;">models</span>.<span style="color: #5854c6;">ConnectionList</span>;',
            '4 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">java</span>.<span style="color: #5854c6;">util</span>.<span style="color: #5854c6;">list</span>;',
            '5 ',
            '6 <span style="color: #5854c6;">ListConnectionsOptions</span> options <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">ListConnectionsOptions</span>();',
            '7 options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"limit"</span>, <span style="color: #143465;">"100"</span>);',
            '8 options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"order"</span>, <span style="color: #143465;">"desc"</span>);',
            '9 ',
            '10 <span style="color: #5854c6;">ConnectionList</span> list <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(options);',
            '11 <span style="color: #5854c6;">String</span> after <span style="color: #ce3559;">=</span> list.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listMetadata</span>.after;',
            '12 <span style="color: #5854c6;">List</span> connections <span style="color: #ce3559;">=</span> list.data;',
            '13 ',
            '14 <span style="color: #148a68;">while</span> (after <span style="color: #ce3559;">!=</span> <span style="color: #148a68;">null</span>) {',
            '15     options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"after"</span>, <span style="color: #143465;">"after"</span>);',
            '16     <span style="color: #5854c6;">ConnectionList</span> currentPage <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(options);',
            '17     after <span style="color: #ce3559;">=</span> currentPage.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listMetadata</span>.after;',
            '18     connections.add(currentPage.data);',
            '19 }'
          ],
          maven: [
            '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">WorkOS</span>;',
            '2 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">sso</span>.<span style="color: #5854c6;">SsoApi</span>.<span style="color: #5854c6;">ListConnectionsOptions</span>;',
            '3 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">sso</span>.<span style="color: #5854c6;">models</span>.<span style="color: #5854c6;">ConnectionList</span>;',
            '4 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">java</span>.<span style="color: #5854c6;">util</span>.<span style="color: #5854c6;">list</span>;',
            '5 ',
            '6 <span style="color: #5854c6;">ListConnectionsOptions</span> options <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">ListConnectionsOptions</span>();',
            '7 options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"limit"</span>, <span style="color: #143465;">"100"</span>);',
            '8 options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"order"</span>, <span style="color: #143465;">"desc"</span>);',
            '9 ',
            '10 <span style="color: #5854c6;">ConnectionList</span> list <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(options);',
            '11 <span style="color: #5854c6;">String</span> after <span style="color: #ce3559;">=</span> list.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listMetadata</span>.after;',
            '12 <span style="color: #5854c6;">List</span> connections <span style="color: #ce3559;">=</span> list.data;',
            '13 ',
            '14 <span style="color: #148a68;">while</span> (after <span style="color: #ce3559;">!=</span> <span style="color: #148a68;">null</span>) {',
            '15     options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"after"</span>, <span style="color: #143465;">"after"</span>);',
            '16     <span style="color: #5854c6;">ConnectionList</span> currentPage <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(options);',
            '17     after <span style="color: #ce3559;">=</span> currentPage.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listMetadata</span>.after;',
            '18     connections.add(currentPage.data);',
            '19 }'
          ],
          gradle: [
            '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">WorkOS</span>;',
            '2 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">sso</span>.<span style="color: #5854c6;">SsoApi</span>.<span style="color: #5854c6;">ListConnectionsOptions</span>;',
            '3 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">com</span>.<span style="color: #5854c6;">workos</span>.<span style="color: #5854c6;">sso</span>.<span style="color: #5854c6;">models</span>.<span style="color: #5854c6;">ConnectionList</span>;',
            '4 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">java</span>.<span style="color: #5854c6;">util</span>.<span style="color: #5854c6;">list</span>;',
            '5 ',
            '6 <span style="color: #5854c6;">ListConnectionsOptions</span> options <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">ListConnectionsOptions</span>();',
            '7 options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"limit"</span>, <span style="color: #143465;">"100"</span>);',
            '8 options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"order"</span>, <span style="color: #143465;">"desc"</span>);',
            '9 ',
            '10 <span style="color: #5854c6;">ConnectionList</span> list <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(options);',
            '11 <span style="color: #5854c6;">String</span> after <span style="color: #ce3559;">=</span> list.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listMetadata</span>.after;',
            '12 <span style="color: #5854c6;">List</span> connections <span style="color: #ce3559;">=</span> list.data;',
            '13 ',
            '14 <span style="color: #148a68;">while</span> (after <span style="color: #ce3559;">!=</span> <span style="color: #148a68;">null</span>) {',
            '15     options.<span style="color: #5854c6;">put</span>(<span style="color: #143465;">"after"</span>, <span style="color: #143465;">"after"</span>);',
            '16     <span style="color: #5854c6;">ConnectionList</span> currentPage <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listConnections</span>(options);',
            '17     after <span style="color: #ce3559;">=</span> currentPage.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">listMetadata</span>.after;',
            '18     connections.add(currentPage.data);',
            '19 }'
          ],
          dotnet: [
            '1 WorkOS.<span style="color: #5854c6;">SetApiKey</span>("<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>");',
            '2 ',
            '3 <span style="color: #148a68;">var</span> ssoService <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">SSOService</span>();',
            '4 ',
            '5 <span style="color: #5854c6;">List</span><<span style="color: #148a68;">object</span>> connections <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">List</span><<span style="color: #148a68;">object</span>>();',
            '6 <span style="color: #148a68;">var</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">list</span> <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> ssoService.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListConnections</span>(Limit <span style="color: #ce3559;">=</span> <span style="color: #0072dd;">100</span>, Order <span style="color: #ce3559;">=</span> \'desc\');',
            '7 ',
            '8 <span style="color: #148a68;">foreach</span> (<span style="color: #148a68;">object</span> i <span style="color: #148a68;">in</span> list.Data)',
            '9 {',
            '10     connections.<span style="color: #5854c6;">Add</span>(i);',
            '11 };',
            '12 <span style="color: #148a68;">var</span> after <span style="color: #ce3559;">=</span> list.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListMetadata</span>.After;',
            '13 ',
            '14 <span style="color: #5854c6;">While</span>(after);',
            '15 {',
            '16     list <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> ssoService.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListConnections</span>(After <span style="color: #ce3559;">=</span> after, Limit <span style="color: #ce3559;">=</span> <span style="color: #0072dd;">100</span>, Order <span style="color: #ce3559;">=</span> \'desc\');',
            '17     <span style="color: #148a68;">foreach</span> (<span style="color: #148a68;">object</span> i <span style="color: #148a68;">in</span> list.Data)',
            '18     {',
            '19         connections.<span style="color: #5854c6;">Add</span>(i);',
            '20     };',
            '21     after <span style="color: #ce3559;">=</span> list.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">ListMetadata</span>.After;',
            '22 };'
          ],
          json: [
            '1 {',
            '2   <span style="color: #0072dd;">"data"</span><span style="color: #ce3559;">:</span> [',
            '3     {',
            '4       <span style="color: #0072dd;">"object"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"connection"</span>,',
            '5       <span style="color: #0072dd;">"id"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"conn_01E4ZCR3C56J083X43JQXF3JK5"</span>,',
            '6       <span style="color: #0072dd;">"organization_id"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"org_01EHWNCE74X7JSDV0X3SZ3KJNY"</span>,',
            '7       <span style="color: #0072dd;">"connection_type"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"GoogleOAuth"</span>,',
            '8       <span style="color: #0072dd;">"name"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"Foo Corp"</span>,',
            '9       <span style="color: #0072dd;">"state"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"active"</span>,',
            '10      <span style="color: #0072dd;">"created_at"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"2021-06-25T19:07:33.155Z"</span>,',
            '11      <span style="color: #0072dd;">"updated_at"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"2021-06-25T19:08:33.155Z"</span>',
            '12    },',
            '13    {',
            '14      <span style="color: #0072dd;">"object"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"connection"</span>,',
            '15      <span style="color: #0072dd;">"id"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"conn_01E2NPPCT7XQ2MVVYDHWGK1WN4"</span>,',
            '16      <span style="color: #0072dd;">"organization_id"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"org_01EHWNCE74X7JSDV0X3SZ3KJNY"</span>,',
            '17      <span style="color: #0072dd;">"connection_type"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"OktaSAML"</span>,',
            '18      <span style="color: #0072dd;">"name"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"Example Co"</span>,',
            '19      <span style="color: #0072dd;">"state"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"active"</span>,',
            '20      <span style="color: #0072dd;">"created_at"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"2021-06-25T19:09:33.155Z"</span>,',
            '21      <span style="color: #0072dd;">"updated_at"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"2021-06-25T19:10:33.155Z"</span>',
            '22    },',
            '23  ],',
            '24  <span style="color: #0072dd;">"list_metadata"</span><span style="color: #ce3559;">:</span> {',
            '25    <span style="color: #0072dd;">"before"</span><span style="color: #ce3559;">:</span> <span style="color: #143465;">"conn_01E2NPPCT7XQ2MVVYDHWGK1WN4"</span>,',
            '26    <span style="color: #0072dd;">"after"</span><span style="color: #ce3559;">:</span> <span style="color: #148a68;">null</span>',
            '27   }',
            '28 }',
          ]
        },
        apiEpxlainers: {
          listConnections_javascript: [
            'sso.<span style="color: #5854c6;">listConnections</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
            '    connectionType<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
            '    domain<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
            '    organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
            '    after<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
            '    before<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
            '    limit<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">number</span>;',
            '    order<span style="color: #ce3559;">?:</span> <span style="color: #143465;">"asc"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"desc"</span>;',
            '}) <span style="color: #ce3559;">=&gt</span> {',
            '    data<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">[]</span>;',
            '    listMetadata<span style="color: #ce3559;">:</span> <span style="color: #148a68;">object</span>;',
            '}',
          ],
          list_ruby: [
            'list<span style="color: #ce3559;">:</span> {',
            '    data<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Array</span><span style="color: #ce3559;">[</span><span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">]</span>,',
            '    list_metadata<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Hash</span>',
            '}'
          ],
          list_connections_ruby: [
            'SSO.<span style="color: #5854c6;">list_connections</span>(',
            '    <span style="color: #ce3559;">?</span>connection_type<span style="color: #ce3559;">:</span> String,',
            '    <span style="color: #ce3559;">?</span>domain<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>,',
            '    <span style="color: #ce3559;">?</span>organization_id<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>,',
            '    <span style="color: #ce3559;">?</span>after<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>,',
            '    <span style="color: #ce3559;">?</span>before<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>,',
            '    <span style="color: #ce3559;">?</span>limit<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Integer</span>,',
            '    <span style="color: #ce3559;">?</span>order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"asc"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"desc"</span>',
            ') <span style="color: #ce3559;">-&gt</span> {',
            '    data<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Array</span><span style="color: #ce3559;">[</span><span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">]</span>,',
            '    list_metadata<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Hash</span>',
            '}'
          ],
          list_metadata_ruby: [
            '(',
            '    <span style="color: #ce3559;">?</span>before<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>,',
            '    <span style="color: #ce3559;">?</span>after<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>,',
            '    <span style="color: #ce3559;">?</span>limit<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Integer</span>,',
            '    <span style="color: #ce3559;">?</span>order<span style="color: #ce3559;">:</span> <span style="color: #143465;">"asc"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"desc"</span>',
            ') <span style="color: #ce3559;">-&gt</span> void'
          ],
          current_page_ruby: [
            'current_page<span style="color: #ce3559;">:</span> {',
            '    data<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Array</span><span style="color: #ce3559;">[</span><span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">]</span>,',
            '    list_metadata<span style="color: #ce3559;">:</span> <span style="color: #148a68;">Hash</span>',
            '}'
          ],
          response_python: [
            'response<span style="color: #ce3559;">:</span> {',
            '    "data"<span style="color: #ce3559;">:</span> <span style="color: #148a68;">list</span><span style="color: #ce3559;">[</span><span style="color: #148a68;">dict</span><span style="color: #ce3559;">]</span>,',
            '    "list_metadata"<span style="color: #ce3559;">:</span> <span style="color: #148a68;">dict</span>',
            '}'
          ],
          list_connections_python: [
            'sso.<span style="color: #5854c6;">list_connections</span><span style="color: #ce3559;">:</span> (',
            '    connection_type<span style="color: #ce3559;">:</span> <span style="color: #148a68;">str</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>',
            '    domain<span style="color: #ce3559;">:</span> <span style="color: #148a68;">str</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>,',
            '    organization_id<span style="color: #ce3559;">:</span> <span style="color: #148a68;">str</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>,',
            '    after<span style="color: #ce3559;">:</span> <span style="color: #148a68;">str</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>,',
            '    before<span style="color: #ce3559;">:</span> <span style="color: #148a68;">str</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>,',
            '    limit<span style="color: #ce3559;">:</span> <span style="color: #148a68;">int</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>,',
            '    order<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">Order.Asc</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">Order.Desc</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">None</span>',
            ') <span style="color: #ce3559;">-></span> {',
            '    "data"<span style="color: #ce3559;">:</span> <span style="color: #148a68;">list</span><span style="color: #ce3559;">[</span><span style="color: #148a68;">dict</span><span style="color: #ce3559;">]</span>,',
            '    "list_metadata"<span style="color: #ce3559;">:</span> <span style="color: #148a68;">dict</span>',
            '}'
          ],
          list_go: [
            'list  <span style="color: #148a68;">sso</span>.<span style="color: #148a68;">ListConnectionsResponse</span>{',
            '\t  Data <span style="color: #ce3559;">[]</span><span style="color: #148a68;">sso</span>.<span style="color: #148a68;">Connection</span>',
            '\t  ListMetadata <span style="color: #148a68;">common</span>.<span style="color: #148a68;">ListMetadata</span>',
            '}'
          ],
          ListConnections_go: [
            'sso.<span style="color: #5854c6;">ListConnections</span>(',
            '\t  ctx <span style="color: #148a68;">context</span>.<span style="color: #148a68;">Context</span>,',
            '\t  opts <span style="color: #148a68;">sso</span>.<span style="color: #148a68;">ListConnectionsOpts</span>{',
            '\t\t  ConnectionType<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t\t  Domain<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t\t  OrganizationID<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t\t  Limit<span style="color: #ce3559;">?</span> <span style="color: #148a68;">int</span>',
            '\t\t  Before<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t\t  After<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t\t  Order<span style="color: #ce3559;">?</span> <span style="color: #148a68;">common</span<.<span style="color: #148a68;">Order</span>',
            '\t  }',
            ') (<span style="color: #148a68;">sso</span>.<span style="color: #148a68;">ListConnectionsResponse</span>, <span style="color: #148a68;">error</span>)',
          ],
          ListMetadata_go: [
            '(',
            '\t  Before<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t  After<span style="color: #ce3559;">?</span> <span style="color: #148a68;">string</span>',
            '\t  Limit<span style="color: #ce3559;">?</span> <span style="color: #148a68;">int</span>',
            '\t  Order<span style="color: #ce3559;">?</span> <span style="color: #148a68;">common</span<.<span style="color: #148a68;">Order</span>',
            ')'
          ],
          currentPage_go: [
            'currentPage <span style="color: #148a68;">sso</span>.<span style="color: #148a68;">ListConnectionsResponse</span>{',
            '\t  Data <span style="color: #ce3559;">[]</span><span style="color: #148a68;">sso</span>.<span style="color: #148a68;">Connection</span>',
            '\t  ListMetadata <span style="color: #148a68;">common</span>.<span style="color: #148a68;">ListMetadata</span>',
            '}'
          ],
          listConnections_php: [
            '$sso<span style="color: #ce3559;">-></span><span style="color: #5854c6;">listConnections</span>(',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $connectionType,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $domain,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $organizationId,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">int</span> $limit,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $before,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $after,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $order "asc"<span style="color: #ce3559;">|</span>"desc"',
            ')<span style="color: #ce3559;">:</span> array <span style="color: #ce3559;">[</span>',
            '    <span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">[]</span> $data,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $before,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $after',
            '<span style="color: #ce3559;">]</span>'
          ],
          listConnections_laravel: [
            '$sso<span style="color: #ce3559;">-></span><span style="color: #5854c6;">listConnections</span>(',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $connectionType,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $domain,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $organizationId,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">int</span> $limit,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $before,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $after,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $order "asc"<span style="color: #ce3559;">|</span>"desc"',
            ')<span style="color: #ce3559;">:</span> array <span style="color: #ce3559;">[</span>',
            '    <span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">[]</span> $data,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $before,',
            '    <span style="color: #ce3559;">?</span><span style="color: #148a68;">string</span> $after',
            '<span style="color: #ce3559;">]</span>'
          ],
          listConnections_java: [
            '<span style="color: #5854c6;">ConnectionList</span> sso.<span style="color: #5854c6;">listConnections</span>(<span style="color: #5854c6;">ListConnectionsOptions</span> options {',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> connectionType',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> domain',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> organizationId',
            '    <span style="color: #148a68;">Int</span><span style="color: #ce3559;">?</span> limit',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> before',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> after',
            '    <span style="color: #5854c6;">Order</span><span style="color: #ce3559;">?</span> order',
            '    <span style="color: #5854c6;">ListConnectionsOptionsBuilder</span> builder()',
            '})'
          ],
          listMetadata_java: [
            '<span style="color: #ce3559;">void</span> (',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> before,',
            '    <span style="color: #148a68;">String</span><span style="color: #ce3559;">?</span> after,',
            '    <span style="color: #148a68;">Int</span><span style="color: #ce3559;">?</span> limit,',
            '    <span style="color: #148a68;">Order</span><span style="color: #ce3559;">?</span> order',
            ')'
          ],
          ListConnections_dotnet: [
            '<span style="color: #5854c6;">Task</span><span style="color: #ce3559;"><</span><span style="color: #5854c6;">WorkOSList</span><span style="color: #ce3559;"><</span><span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">>></span> ssoService.<span style="color: #5854c6;">ListConnections</span>(',
            '    <span style="color: #5854c6;">ListConnectionsOptions</span> options {',
            '        <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> Type;',
            '        <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> Domain;',
            '        <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> OrganizationId;',
            '        <span style="color: #148a68;">int</span><span style="color: #ce3559;">?</span> Limit;',
            '        <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> Before;',
            '        <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> After;',
            '        <span style="color: #5854c6;">PaginationOrder</span><span style="color: #ce3559;">?</span> Order;',
            '    },',
            '    <span style="color: #5854c6;">CancellationToken</span><span style="color: #ce3559;">?</span> cancellationToken',
            ')'
          ],
          ListMetadata_dotnet: [
            '<span style="color: #ce3559;">void</span> (',
            '    <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> Before,',
            '    <span style="color: #148a68;">string</span><span style="color: #ce3559;">?</span> After,',
            '    <span style="color: #148a68;">int</span><span style="color: #ce3559;">?</span> Limit,',
            '    <span style="color: #5854c6;">PaginationOrder</span><span style="color: #ce3559;">?</span> Order',
            ')'
          ],
          list_dotnet: [
            '<span style="color: #5854c6;">WorkOSList</span><span style="color: #ce3559;"><</span><span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">></span> {',
            '    <span style="color: #5854c6;">List</span><span style="color: #ce3559;"><</span><span style="color: #5854c6;">Connection</span><span style="color: #ce3559;">></span> Data;',
            '   <span style="color: #5854c6;">ListMetadata</span> ListMetadata;',
            '}',
          ]
        }
    },

           //! - - USER MANAGEMENT - - !//

    { //* Install dependencies
      id: 3,
      title: "Install dependencies",
      doubleHeaders: {
        javascript: [
          {lang1: "Node SDK", lang2: "Next.js"}
        ],
        nextjs: [
          {lang1: "Node SDK", lang2: "Next.js"}
        ]
      },
      code: {
        javascript: [
          '$ <span style="color: #5854c6;">npm install</span> @workos-inc/node'
        ],
        nodesdk: [
          '$ <span style="color: #5854c6;">npm install</span> @workos-inc/node'
        ],
        nextjs: [
          '$ <span style="color: #5854c6;">npm install</span> @workos-inc/authkit-nextjs'
        ],
        openssl: [
          '$ <span style="color: #5854c6;">npm install</span> @workos-inc/authkit-nextjs'
        ]
      }
    },

    { //* Environment Variables (Node)
      id: 4,
      title: "Environment variables",
      code: {
        javascript: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        nodesdk: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        nextjs: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        openssl: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        yarn: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        gradle: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        maven: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        terminal: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        bundler: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        java: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        php: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        laravel: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        python: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        ruby: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        go: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        dotnet: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ],
        express: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\''
        ]
      }
    },

    { //* Environment Variables (Next.js)
      id: 5,
      title: "Environment variables",
      code: {
        javascript: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '>',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"http://localhost:3000/callback"</span> <span style="color: #8b8d98;"># configured in the WorkOS dashboard</span>',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"&ltyour password&gt"</span> <span style="color: #8b8d98;"># generate a secure password here</span>'
        ],
        nodesdk: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '> ',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"http://localhost:3000/callback"</span> <span style="color: #8b8d98;"># configured in the WorkOS dashboard</span>',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"&ltyour password&gt"</span> <span style="color: #8b8d98;"># generate a secure password here</span>'
        ],
        openssl: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '> ',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"http://localhost:3000/callback"</span> <span style="color: #8b8d98;"># configured in the WorkOS dashboard</span>',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"&ltyour password&gt"</span> <span style="color: #8b8d98;"># generate a secure password here</span>'
        ],
        nextjs: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '> ',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"http://localhost:3000/callback"</span> <span style="color: #8b8d98;"># configured in the WorkOS dashboard</span>',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span><span style="color: #143465;">"&ltyour password&gt"</span> <span style="color: #8b8d98;"># generate a secure password here</span>'
        ]
      }
    },

    { //* Generate a strong password
      id: 6,
      title: "Generate a strong password",
      code: {
        javascript: [
          '$ openssl rand -base64 <span style="color: #0072dd;">24</span>',
        ],
        nodesdk: [
          '$ openssl rand -base64 <span style="color: #0072dd;">24</span>',
        ],
        openssl: [
          '$ openssl rand -base64 <span style="color: #0072dd;">24</span>',
        ],
        nextjs: [
          '$ openssl rand -base64 <span style="color: #0072dd;">24</span>',
        ]
      }
    },

    { //* Redirect users to AuthKit
      id: 7,
      title: "Redirect users to AuthKit",
      doubleHeaders: {
        javascript: [
          {lang1: "Node SDK", lang2: "Next.js"}
        ],
        nextjs: [
          {lang1: "Node SDK", lang2: "Next.js"}
        ]
      },
      code: {
        javascript: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '6 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '7 ',
          '8 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '9   <span style="color: #148a68;">const</span> authorizationUrl <span style="color: #ce3559;">=</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getAuthorizationUrl</span>({',
          '10    <span style="color: #8b8d98;">// Specify that we\'d like AuthKit to handle the authentication flow</span>',
          '11    provider<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'authkit\'</span>,',
          '12 ',
          '13    <span style="color: #8b8d98;">// The callback endpoint that WorkOS will redirect to after a user authenticates</span>',
          '14    redirectUri<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'http://localhost:3000/callback\'</span>,',
          '15    clientId,',
          '16   });',
          '17 ',
          '18   <span style="color: #8b8d98;">// Redirect the user to the AuthKit sign-in page</span>',
          '19   res.<span style="color: #5854c6;">redirect</span>(authorizationUrl);',
          '20 });',
        ],
        nodesdk: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '6 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '7 ',
          '8 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '9   <span style="color: #148a68;">const</span> authorizationUrl <span style="color: #ce3559;">=</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getAuthorizationUrl</span>({',
          '10    <span style="color: #8b8d98;">// Specify that we\'d like AuthKit to handle the authentication flow</span>',
          '11    provider<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'authkit\'</span>,',
          '12 ',
          '13    <span style="color: #8b8d98;">// The callback endpoint that WorkOS will redirect to after a user authenticates</span>',
          '14    redirectUri<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'http://localhost:3000/callback\'</span>,',
          '15    clientId,',
          '16   });',
          '17 ',
          '18   <span style="color: #8b8d98;">// Redirect the user to the AuthKit sign-in page</span>',
          '19   res.<span style="color: #5854c6;">redirect</span>(authorizationUrl);',
          '20 });',
        ],
        nextjs: [
          '1 <span style="color: #148a68;">import</span> <span style="color: #5854c6;">Link</span> <span style="color: #148a68;">from</span> <span style="color: #143465;">\'next/link\'</span>;',
          '2 <span style="color: #148a68;">import</span> {',
          '3   getSignInUrl,',
          '4   getSignUpUrl,',
          '5   getUser,',
          '6   signOut,',
          '7 } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/authkit-nextjs\'</span>;',
          '8 ',
          '9 <span style="color: #148a68;">export default async function</span> <span style="color: #5854c6;">HomePage</span>() {',
          '10   <span style="color: #8b8d98;">// Retrieves the user from the session or returns `null` if no user is signed in</span>',
          '11   <span style="color: #148a68;">const</span> { user } <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getUser</span>();',
          '12 ',
          '13   <span style="color: #8b8d98;">// Get the URL to redirect the user to AuthKit to sign in</span>',
          '14   <span style="color: #148a68;">const</span> signInUrl <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getSignInUrl</span>();',
          '15 ',
          '16   <span style="color: #8b8d98;">// Get the URL to redirect the user to AuthKit to sign up</span>',
          '17   <span style="color: #148a68;">const</span> signUpUrl <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSignUpUrl</span>();',
          '18    ',
          '19   <span style="color: #8b8d98;">/**</span>',
          '20    <span style="color: #8b8d98;">* If a signed-in user is mandatory, you can use the `ensureSignedIn</span>',
          '21    <span style="color: #8b8d98;">* configuration option. If logged out, the below will immediately redirect</span>',
          '22    <span style="color: #8b8d98;">* the user to AuthKit. After signing in, the user will automatically</span>',
          '23    <span style="color: #8b8d98;">* be redirected back to this page.</span>',
          '24    <span style="color: #8b8d98;">* */</span>',
          '25   <span style="color: #8b8d98;">// const { user } = await getUser({ ensureSignedIn: true });</span>',
          '26 ',
          '27   <span style="color: #148a68;">if</span> (<span style="color: #ce3559;">!</span>user) {',
          '28     <span style="color: #148a68;">return</span> (',
          '29       <>',
          '30         &lt<span style="color: #5854c6;">Link</span> href={signInUrl}&gtSign in&lt/<span style="color: #5854c6;">Link</span>&gt;',
          '31         &lt<span style="color: #5854c6;">Link</span> href={signUpUrl}&gtSign up&lt/<span style="color: #5854c6;">Link</span>&gt;',
          '32       &lt/&gt',
          '33     );',
          '34   }',
          '35 ',
          '36   <span style="color: #148a68;">return</span> (',
          '37     &lt<span style="color: #0072dd;">form</span>',
          '38       action={<span style="color: #148a68;">async</span> () <span style="color: #ce3559;">=></span> {',
          '39         \'use server\';',
          '40         <span style="color: #148a68;">await</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">signOut</span>();',
          '41       }}',
          '42     &gt',
          '43       &lt<span style="color: #0072dd;">p</span>&gtWelcome back{user.firstName <span style="color: #ce3559;">&&</span> `, ${user.firstName}`}&lt/<span style="color: #0072dd;">p</span>&gt',
          '44       &lt<span style="color: #0072dd;">button</span> type="<span style="color: #148a68;">submit</span>"&gtSign out&lt/<span style="color: #0072dd;">button</span>&gt',
          '45     &lt/<span style="color: #0072dd;">form</span>&gt',
          '46   );',
          '47 }',
        ]
      },
      apiEpxlainers: {
        getAuthorizationUrl_javascript: [
          'userManagement.<span style="color: #5854c6;">getAuthorizationUrl</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  redirectUri<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  connectionId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  provider<span style="color: #ce3559;">?:</span> <span style="color: #143465;">"authkit"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span>;',
          '  state<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  loginHint<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  domainHint<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  screenHint<span style="color: #ce3559;">?:</span> <span style="color: #143465;">"sign-up"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"sign-in"</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>',
        ],
        getUser_nextjs: [
          '<span style="color: #5854c6;">getUser</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  ensureSignedIn<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">boolean</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Promise</span><span style="color: #ce3559;"><</span><span style="color: #5854c6;">UserInfo</span> <span style="color: #ce3559;">|</span> <span style="color: #5854c6;">NoUserInfo</span><span style="color: #ce3559;">></span>'
        ],
        getSignInUrl_nextjs: [
          '<span style="color: #5854c6;">getSignInUrl</span><span style="color: #ce3559;">:</span> () <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Promise</span><span style="color: #ce3559;">&lt</span><span style="color: #148a68;">string</span><span style="color: #ce3559;">&gt</span>'
        ],
        signOut_nextjs: [
          '<span style="color: #5854c6;">signOut</span><span style="color: #ce3559;">:</span> () <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Promise</span><span style="color: #ce3559;">&ltvoid&gt</span>'
        ]
      }
    },

    { //* Callback endpoint
      id: 8,
      title: "Callback endpoint",
      code: {
        javascript: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 ',
          '6 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '7 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '8 ',
          '9 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '10   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '11   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '12 ',
          '13   <span style="color: #148a68;">const</span> { <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">user</span> } <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '14     code,',
          '15     clientId,',
          '16   });',
          '17 ',
          '18   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '19 ',
          '20   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '21   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '22 });',
        ],
        nodesdk: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 ',
          '6 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '7 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '8 ',
          '9 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '10   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '11   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '12 ',
          '13   <span style="color: #148a68;">const</span> { <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">user</span> } <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '14     code,',
          '15     clientId,',
          '16   });',
          '17 ',
          '18   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '19 ',
          '20   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '21   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '22 });',
        ],
        nextjs: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 ',
          '6 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '7 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '8 ',
          '9 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '10   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '11   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '12 ',
          '13   <span style="color: #148a68;">const</span> { <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">user</span> } <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '14     code,',
          '15     clientId,',
          '16   });',
          '17 ',
          '18   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '19 ',
          '20   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '21   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '22 });',
        ],
        openssl: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 ',
          '6 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '7 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '8 ',
          '9 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '10   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '11   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '12 ',
          '13   <span style="color: #148a68;">const</span> { <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">user</span> } <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '14     code,',
          '15     clientId,',
          '16   });',
          '17 ',
          '18   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '19 ',
          '20   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '21   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '22 });',
        ]
      },
      apiEpxlainers: {
        user_javascript: [
          '<span style="color: #148a68;">interface</span> <span style="color: #5854c6;">User</span> {',
          '  object<span style="color: #ce3559;">:</span> <span style="color: #143465;">"user"</span>;',
          '  id<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  email<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  firstName<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  lastName<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  emailVerified<span style="color: #ce3559;">:</span> <span style="color: #148a68;">boolean</span>;',
          '  profilePictureUrl<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  createdAt<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  updatedAt<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '}'
        ],
        user_nodesdk : [
          '<span style="color: #148a68;">interface</span> <span style="color: #5854c6;">User</span> {',
          '  object<span style="color: #ce3559;">:</span> <span style="color: #143465;">"user"</span>;',
          '  id<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  email<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  firstName<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  lastName<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  emailVerified<span style="color: #ce3559;">:</span> <span style="color: #148a68;">boolean</span>;',
          '  profilePictureUrl<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  createdAt<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  updatedAt<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '}'
        ],
        user_nextjs: [
          '<span style="color: #148a68;">interface</span> <span style="color: #5854c6;">User</span> {',
          '  object<span style="color: #ce3559;">:</span> <span style="color: #143465;">"user"</span>;',
          '  id<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  email<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  firstName<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  lastName<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  emailVerified<span style="color: #ce3559;">:</span> <span style="color: #148a68;">boolean</span>;',
          '  profilePictureUrl<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  createdAt<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  updatedAt<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '}'
        ],
        authenticateWithCode_javascript: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ],
        authenticateWithCode_nodesdk: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ],
        authenticateWithCode_nextjs: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ],
        authenticateWithCode_openssl: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ]
      }
    },

    { //* middleware.ts
      id: 9,
      title: "middleware.ts",
      code: {
        javascript: [
          '1 <span style="color: #148a68;">import</span> { authkitMiddleware } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/authkit-nextjs\'</span>;',
          '2 ',
          '3 <span style="color: #148a68;">export default</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authKitMiddleware</span>();',
          '4 ',
          '5 <span style="color: #8b8d98;">// Match against pages that require authentication</span>',
          '6 <span style="color: #8b8d98;">// Leave this out if you want authentication on every page in your application</span>',
          '7 <span style="color: #148a68;">export const</span> config <span style="color: #ce3559;">=</span> { matcher: [<span style="color: #143465;">\'/\'</span>] };'
        ],
        nextjs: [
          '1 <span style="color: #148a68;">import</span> { authkitMiddleware } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/authkit-nextjs\'</span>;',
          '2 ',
          '3 <span style="color: #148a68;">export default</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authKitMiddleware</span>();',
          '4 ',
          '5 <span style="color: #8b8d98;">// Match against pages that require authentication</span>',
          '6 <span style="color: #8b8d98;">// Leave this out if you want authentication on every page in your application</span>',
          '7 <span style="color: #148a68;">export const</span> config <span style="color: #ce3559;">=</span> { matcher: [<span style="color: #143465;">\'/\'</span>] };'
        ],
        nodesdk: [
          '1 <span style="color: #148a68;">import</span> { authkitMiddleware } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/authkit-nextjs\'</span>;',
          '2 ',
          '3 <span style="color: #148a68;">export default</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authKitMiddleware</span>();',
          '4 ',
          '5 <span style="color: #8b8d98;">// Match against pages that require authentication</span>',
          '6 <span style="color: #8b8d98;">// Leave this out if you want authentication on every page in your application</span>',
          '7 <span style="color: #148a68;">export const</span> config <span style="color: #ce3559;">=</span> { matcher: [<span style="color: #143465;">\'/\'</span>] };'
        ],
        openssl: [
          '1 <span style="color: #148a68;">import</span> { authkitMiddleware } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/authkit-nextjs\'</span>;',
          '2 ',
          '3 <span style="color: #148a68;">export default</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authKitMiddleware</span>();',
          '4 ',
          '5 <span style="color: #8b8d98;">// Match against pages that require authentication</span>',
          '6 <span style="color: #8b8d98;">// Leave this out if you want authentication on every page in your application</span>',
          '7 <span style="color: #148a68;">export const</span> config <span style="color: #ce3559;">=</span> { matcher: [<span style="color: #143465;">\'/\'</span>] };'
        ]
      },
      apiEpxlainers: {
        authKitMiddleware_javascript: [
          '<span style="color: #5854c6;">authkitMiddleware</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  debug<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">boolean</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">NextMiddleware</span>'
        ],
        authKitMiddleware_nextjs: [
          '<span style="color: #5854c6;">authkitMiddleware</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  debug<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">boolean</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">NextMiddleware</span>'
        ],
        authKitMiddleware_nodesdk: [
          '<span style="color: #5854c6;">authkitMiddleware</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  debug<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">boolean</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">NextMiddleware</span>'
        ],
        authKitMiddleware_openssl: [
          '<span style="color: #5854c6;">authkitMiddleware</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  debug<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">boolean</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">NextMiddleware</span>'
        ]
      }
    },

    { //* /app/callback/route.ts
      id: 10,
      title: "/app/callback/route.ts",
      code: {
        javascript: [
          '1 <span style="color: #148a68;">import</span> { handleAuth } <span style="color: #148a68;">from</span> \'@workos-inc/authkit-nextjs\';',
          '2 ',
          '3 <span style="color: #8b8d98;">// Redirect the user to `/` after successful sign in</span>',
          '4 <span style="color: #8b8d98;">// The redirect can be customized: `handleAuth({ returnPathname: \'/foo\' })`</span>',
          '5 <span style="color: #148a68;">export const</span> <span style="color: #0072dd;">GET</span> <span style="color: #ce3559;">=</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">handleAuth</span>();',
        ],
        nextjs: [
          '1 <span style="color: #148a68;">import</span> { handleAuth } <span style="color: #148a68;">from</span> \'@workos-inc/authkit-nextjs\';',
          '2 ',
          '3 <span style="color: #8b8d98;">// Redirect the user to `/` after successful sign in</span>',
          '4 <span style="color: #8b8d98;">// The redirect can be customized: `handleAuth({ returnPathname: \'/foo\' })`</span>',
          '5 <span style="color: #148a68;">export const</span> <span style="color: #0072dd;">GET</span> <span style="color: #ce3559;">=</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">handleAuth</span>();',
        ],
        nodesdk: [
          '1 <span style="color: #148a68;">import</span> { handleAuth } <span style="color: #148a68;">from</span> \'@workos-inc/authkit-nextjs\';',
          '2 ',
          '3 <span style="color: #8b8d98;">// Redirect the user to `/` after successful sign in</span>',
          '4 <span style="color: #8b8d98;">// The redirect can be customized: `handleAuth({ returnPathname: \'/foo\' })`</span>',
          '5 <span style="color: #148a68;">export const</span> <span style="color: #0072dd;">GET</span> <span style="color: #ce3559;">=</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">handleAuth</span>();',
        ],
        openssl: [
          '1 <span style="color: #148a68;">import</span> { handleAuth } <span style="color: #148a68;">from</span> \'@workos-inc/authkit-nextjs\';',
          '2 ',
          '3 <span style="color: #8b8d98;">// Redirect the user to `/` after successful sign in</span>',
          '4 <span style="color: #8b8d98;">// The redirect can be customized: `handleAuth({ returnPathname: \'/foo\' })`</span>',
          '5 <span style="color: #148a68;">export const</span> <span style="color: #0072dd;">GET</span> <span style="color: #ce3559;">=</span> <span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">handleAuth</span>();',
        ]
      },
      apiEpxlainers: {
        handleAuth_javascript: [
          '<span style="color: #5854c6;">handleAuth</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  returnPathname<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Function</span>'
        ],
        handleAuth_nextjs: [
          '<span style="color: #5854c6;">handleAuth</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  returnPathname<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Function</span>'
        ],
        handleAuth_nodesdk: [
          '<span style="color: #5854c6;">handleAuth</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  returnPathname<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Function</span>'
        ],
        handleAuth_openssl: [
          '<span style="color: #5854c6;">handleAuth</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  returnPathname<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #5854c6;">Function</span>'
        ]
      }
    },
    
    { //* Create a session password
      id: 11,
      title: "Create a session password",
      doubleHeaders: {
        javascript: [
          {lang1: "OpenSSL", lang2: "Node SDK"}
        ],
        openssl: [
          {lang1: "OpenSSL", lang2: "Node SDK"}
        ],
        nodesdk: [
          {lang1: "OpenSSL", lang2: "Node SDK"}
        ],
        nextjs: [
          {lang1: "OpenSSL", lang2: "Node SDK"}
        ]
      },
      code: {
        javascript: [
          '$ openssl rand -base64 <span style="color: #0072dd;">64</span>'
        ],
        openssl: [
          '$ openssl rand -base64 <span style="color: #0072dd;">64</span>'
        ],
        nodesdk: [
          '$ <span style="color: #5854c6;">node</span> -e <span style="color: #143465;">"console.log(require(\'crypto\').randomBytes(64).toString(\'base64\'));"</span>'
        ]
      }
    },

    { //* Environment Variables (Handling sessions manually)
      id: 12,
      title: "Environment variables",
      code: {
        javascript: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '>',
          '> <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7; color: #000; padding: 2px 4px;"> WORKOS_COOKIE_PASSWORD<span style="color: #ce3559;">=</span><span style="color: #143465;">\'&ltyour password&gt\'</span></span>'
        ],
        nodesdk: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '>',
          '> <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7; color: #000; padding: 2px 4px;"> WORKOS_COOKIE_PASSWORD<span style="color: #ce3559;">=</span><span style="color: #143465;">\'&ltyour password&gt\'</span></span>'        ],
        nextjs: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '>',
          '> <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7; color: #000; padding: 2px 4px;"> WORKOS_COOKIE_PASSWORD<span style="color: #ce3559;">=</span><span style="color: #143465;">\'&ltyour password&gt\'</span></span>'        ],
        openssl: [
          '$ WORKOS_API_KEY<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">sk_example_123456789</span>\'',
          '> WORKOS_CLIENT_ID<span style="color: #ce3559;">=</span>\'<span style="background-color: #ededf1; color: #2c333b; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">client_123456789</span>\'',
          '>',
          '> <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7; color: #000; padding: 2px 4px;"> WORKOS_COOKIE_PASSWORD<span style="color: #ce3559;">=</span><span style="color: #143465;">\'&ltyour password&gt\'</span></span>'        ]
      }
    },

    { //* Encrypt session
      id: 13,
      title: "Encrypt session",
      code: {
        javascript: [
          '1 <span style="color: #148a68;">import</span> cookieParser <span style="color: #148a68;">from</span> <span style="color: #143465;">\'cookie-parser\'</span>;',
          '2 <span style="color: #148a68;">import</span> { sealData, unsealData } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'iron-session\'</span>;',
          '3 ',
          '4 app.<span style="color: #5854c6;">use</span>(<span style="color: #5854c6;">cookieParser</span>());',
          '5 ',
          '6 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '7   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '8   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '9 ',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7; color: #8b8d98; padding: 2px 4px;">   <span style="color: #148a68;">const</span> { user, accessToken, refreshToken, impersonator } = </div>',
          '11     <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '12       code,',
          '13       clientId,',
          '14     });',
          '15 ',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-top: 1px solid #c3e8d7; color: #8b8d98; padding: 2px 4px;">   <span style="color: #8b8d98;">// The refreshToken should never be accesible publicly,</span></span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">   <span style="color: #8b8d98;">// hence why we encrypt it in the cookie session.</span></span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">   <span style="color: #8b8d98;">// Alternatively you could persist the refresh token in a backend database</span></span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">   <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">     { accessToken, refreshToken, user, impersonator },</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">     { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">   );</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;"> </span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">   <span style="color: #8b8d98;">// Store the session in a cookie</span></span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">   res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">     path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">     httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">     secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; color: #8b8d98; padding: 2px 4px;">     sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,</span>',
          '+ <span style="display: inline-block; width: calc(100% - 15px); background-color: #e6f7ed; border-bottom: 1px solid #c3e8d7; color: #8b8d98; padding: 2px 4px;">   });</span>',
          '31 ',
          '32   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '33 ',
          '34   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '35   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '36 });',
        ],
        nextjs: [
          '1 <span style="color: #148a68;">import</span> cookieParser <span style="color: #148a68;">from</span> <span style="color: #143465;">\'cookie-parser\'</span>;',
          '2 <span style="color: #148a68;">import</span> { sealData, unsealData } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'iron-session\'</span>;',
          '3 ',
          '4 app.<span style="color: #5854c6;">use</span>(<span style="color: #5854c6;">cookieParser</span>());',
          '5 ',
          '6 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '7   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '8   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '9 ',
          '<div style="background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   <span style="color: #148a68;">const</span> { user, accessToken, refreshToken, impersonator } = </div>',
          '11     <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '12       code,',
          '13       clientId,',
          '14     });',
          '15 ',
          '<div style="background-color: #e6f7ed; border-top: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// The refreshToken should never be accesible publicly,</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// hence why we encrypt it in the cookie session.</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// Alternatively you could persist the refresh token in a backend database</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     { accessToken, refreshToken, user, impersonator },</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   );</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span> </div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// Store the session in a cookie</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,</div>',
          '<div style="background-color: #e6f7ed; border-bottom: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   });</div>',
          '31 ',
          '32   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '33 ',
          '34   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '35   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '36 });',
        ],
        nodesdk: [
          '1 <span style="color: #148a68;">import</span> cookieParser <span style="color: #148a68;">from</span> <span style="color: #143465;">\'cookie-parser\'</span>;',
          '2 <span style="color: #148a68;">import</span> { sealData, unsealData } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'iron-session\'</span>;',
          '3 ',
          '4 app.<span style="color: #5854c6;">use</span>(<span style="color: #5854c6;">cookieParser</span>());',
          '5 ',
          '6 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '7   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '8   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '9 ',
          '<div style="background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   <span style="color: #148a68;">const</span> { user, accessToken, refreshToken, impersonator } = </div>',
          '11     <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '12       code,',
          '13       clientId,',
          '14     });',
          '15 ',
          '<div style="background-color: #e6f7ed; border-top: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// The refreshToken should never be accesible publicly,</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// hence why we encrypt it in the cookie session.</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// Alternatively you could persist the refresh token in a backend database</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     { accessToken, refreshToken, user, impersonator },</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   );</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span> </div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// Store the session in a cookie</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,</div>',
          '<div style="background-color: #e6f7ed; border-bottom: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   });</div>',
          '31 ',
          '32   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '33 ',
          '34   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '35   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '36 });',
        ],
        openssl: [
          '1 <span style="color: #148a68;">import</span> cookieParser <span style="color: #148a68;">from</span> <span style="color: #143465;">\'cookie-parser\'</span>;',
          '2 <span style="color: #148a68;">import</span> { sealData, unsealData } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'iron-session\'</span>;',
          '3 ',
          '4 app.<span style="color: #5854c6;">use</span>(<span style="color: #5854c6;">cookieParser</span>());',
          '5 ',
          '6 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/callback\'</span>, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '7   <span style="color: #8b8d98;">// The authorization code returned by AuthKit</span>',
          '8   <span style="color: #148a68;">const</span> code <span style="color: #ce3559;">=</span> req.query.code;',
          '9 ',
          '<div style="background-color: #e6f7ed; border-top: 1px solid #c3e8d7; border-bottom: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   <span style="color: #148a68;">const</span> { user, accessToken, refreshToken, impersonator } = </div>',
          '11     <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithCode</span>({',
          '12       code,',
          '13       clientId,',
          '14     });',
          '15 ',
          '<div style="background-color: #e6f7ed; border-top: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// The refreshToken should never be accesible publicly,</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// hence why we encrypt it in the cookie session.</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// Alternatively you could persist the refresh token in a backend database</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     { accessToken, refreshToken, user, impersonator },</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   );</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span> </div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   <span style="color: #8b8d98;">// Store the session in a cookie</span></div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>   res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,</div>',
          '<div style="background-color: #e6f7ed;"><span style="color: #8b8d98;">+</span>     sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,</div>',
          '<div style="background-color: #e6f7ed; border-bottom: 1px solid #c3e8d7;"><span style="color: #8b8d98;">+</span>   });</div>',
          '31 ',
          '32   <span style="color: #8b8d98;">// Use the information in `user` for further business logic.</span>',
          '33 ',
          '34   <span style="color: #8b8d98;">// Redirect the user to the homepage</span>',
          '35   res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/\'</span>);',
          '36 });',
        ]
      },
      apiEpxlainers: {
        authenticateWithCode_javascript: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ],
        authenticateWithCode_nodesdk: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ],
        authenticateWithCode_nextjs: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ],
        authenticateWithCode_openssl: [
          'userManagement.<span style="color: #5854c6;">authenticateWithCode</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  code<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  invitationCode<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  user<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">User</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  authenticationMethod<span style="color: #ce3559;">:</span> <span style="color: #143465;">"SSO"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Password"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MagicAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"Impersonation"</span>;',
          '  impersonator<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">object</span>;',
          '}'
        ]
      }
    },

    { //* Secure route with middleware
      id: 14,
      title: "Secure route with middleware",
      code: {
        javascript: [
          '1 <span style="color: #8b8d98;">// Javascript Object Signing and Encryption (JOSE)</span>',
          '2 <span style="color: #8b8d98;">// https://www.npmjs.com/package/jose</span>',
          '3 <span style="color: #148a68;">import</span> { createRemoteJWKSet, jwtVerify } from <span style="color: #143465;">\'jose\'</span>;',
          '4 ',
          '5 <span style="color: #148a68;">const</span< clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '6 ',
          '7 <span style="color: #8b8d98;">// Set the JWKS URL. This is used to verify if the JWT is still valid</span>',
          '8 <span style="color: #148a68;">const</span> <span style="color: #0072dd;">JWKS</span> <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">createRemoteJWKSet</span>(',
          '9   <span style="color: #148a68;">new</span> <span style="color: #5854c6;">URL</span>(workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getJwksUrl</span>(clientId)),',
          '10 );',
          '11 ',
          '12 <span style="color: #8b8d98;">// Auth middleware function</span>',
          '13 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">withAuth</span>(req, res, next) {',
          '14   <span style="color: #8b8d98;">// First, attempt to get the session from the cookie</span>',
          '15   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>>req.cookies);',
          '16 ',
          '17   <span style="color: #8b8d98;">// If no session, redirect the user to the login page</span>',
          '18   <span style="color: #148a68;">if</span> (<span style="color: #ce3559;">!</span>session) {',
          '19     <span style="color: #148a68;">return</span> res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '20   }',
          '21 ',
          '22   <span style="color: #148a68;">const</span> hasValidSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">verifyAccessToken</span>(session.accessToken);',
          '23 ',
          '24   <span style="color: #8b8d98;">// If the session is valid, move on to the next function</span>',
          '25   <span style="color: #148a68;">if</span> (hasValidSession) {',
          '26     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '27   }',
          '28 ',
          '29   <span style="color: #148a68;">try</span> {',
          '30     <span style="color: #8b8d98;">// If the session is invalid (i.e. the access token has expired)</span>',
          '31     <span style="color: #8b8d98;">// attempt to re-authenticate with the refresh token</span>',
          '32     <span style="color: #148a68;">const</span> { accessToken, refreshToken } <span style="color: #ce3559;">=</span>',
          '33       <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithRefreshToken</span>({',
          '34         clientId,',
          '35         refreshToken<span style="color: #ce3559;">:</span> session.refreshToken,',
          '36       });',
          '37 ',
          '38     <span style="color: #8b8d98;">// Refresh tokens are single use, so update the session with the</span>',
          '39     <span style="color: #8b8d98;">// new access and refresh tokens</span>',
          '40     <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(',
          '41       {',
          '42         accessToken,',
          '43         refreshToken,',
          '44         user<span style="color: #ce3559;">:</span> session.user,',
          '45         impersonator<span style="color: #ce3559;">:</span> session.impersonator,',
          '46       },',
          '47       { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },',
          '48     );',
          '49 ',
          '50     <span style="color: #8b8d98;">// Update the cookie</span>',
          '51     res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {',
          '52       path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,',
          '53       httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '54       secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '55       sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,',
          '56     });',
          '57 ',
          '58     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '59   } <span style="color: #148a68;">catch</span> (e) {',
          '60     <span style="color: #8b8d98;">// Failed to refresh access token, redirect user to login page</span>',
          '61     <span style="color: #8b8d98;">// after deleting the cookie</span>',
          '62     res.<span style="color: #5854c6;">clearCookie</span>(<span style="color: #143465;">\'wos-session\'</span>);',
          '63     res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '64   }',
          '65 }',
          '66 ',
          '67 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">getSessionFromCookie</span>(cookies) {',
          '68   <span style="color: #148a68;">const</span> cookie <span style="color: #ce3559;">=</span> cookies[<span style="color: #143465;">\'wos-session\'</span>];',
          '69 ',
          '70   <span style="color: #148a68;">if</span> (cookie) {',
          '71     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">unsealData</span>(cookie, {',
          '72       password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span>,',
          '73     });',
          '74   }',
          '75 }',
          '76 ',
          '77 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">verifyAccessToken</span>(accessToken) {',
          '78   <span style="color: #148a68;">try</span> {',
          '79     <span style="color: #148a68;">await</span> <span style="color: #5854c6;">jwtVerify</span>(accessToken, <span style="color: #0072dd;">JWKS</span>);',
          '80     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">true</span>;',
          '81   } <span style="color: #148a68;">catch</span> (e) {',
          '82     <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">warn</span>(<span style="color: #143465;">\'Failed to verify session:\'</span>, e);',
          '83     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">false</span>;',
          '84   }',
          '85 }',
        ],
        nextjs: [
          '1 <span style="color: #8b8d98;">// Javascript Object Signing and Encryption (JOSE)</span>',
          '2 <span style="color: #8b8d98;">// https://www.npmjs.com/package/jose</span>',
          '3 <span style="color: #148a68;">import</span> { createRemoteJWKSet, jwtVerify } from <span style="color: #143465;">\'jose\'</span>;',
          '4 ',
          '5 <span style="color: #148a68;">const</span< clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '6 ',
          '7 <span style="color: #8b8d98;">// Set the JWKS URL. This is used to verify if the JWT is still valid</span>',
          '8 <span style="color: #148a68;">const</span> <span style="color: #0072dd;">JWKS</span> <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">createRemoteJWKSet</span>(',
          '9   <span style="color: #148a68;">new</span> <span style="color: #5854c6;">URL</span>(workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getJwksUrl</span>(clientId)),',
          '10 );',
          '11 ',
          '12 <span style="color: #8b8d98;">// Auth middleware function</span>',
          '13 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">withAuth</span>(req, res, next) {',
          '14   <span style="color: #8b8d98;">// First, attempt to get the session from the cookie</span>',
          '15   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>>req.cookies);',
          '16 ',
          '17   <span style="color: #8b8d98;">// If no session, redirect the user to the login page</span>',
          '18   <span style="color: #148a68;">if</span> (<span style="color: #ce3559;">!</span>session) {',
          '19     <span style="color: #148a68;">return</span> res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '20   }',
          '21 ',
          '22   <span style="color: #148a68;">const</span> hasValidSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">verifyAccessToken</span>(session.accessToken);',
          '23 ',
          '24   <span style="color: #8b8d98;">// If the session is valid, move on to the next function</span>',
          '25   <span style="color: #148a68;">if</span> (hasValidSession) {',
          '26     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '27   }',
          '28 ',
          '29   <span style="color: #148a68;">try</span> {',
          '30     <span style="color: #8b8d98;">// If the session is invalid (i.e. the access token has expired)</span>',
          '31     <span style="color: #8b8d98;">// attempt to re-authenticate with the refresh token</span>',
          '32     <span style="color: #148a68;">const</span> { accessToken, refreshToken } <span style="color: #ce3559;">=</span>',
          '33       <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithRefreshToken</span>({',
          '34         clientId,',
          '35         refreshToken<span style="color: #ce3559;">:</span> session.refreshToken,',
          '36       });',
          '37 ',
          '38     <span style="color: #8b8d98;">// Refresh tokens are single use, so update the session with the</span>',
          '39     <span style="color: #8b8d98;">// new access and refresh tokens</span>',
          '40     <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(',
          '41       {',
          '42         accessToken,',
          '43         refreshToken,',
          '44         user<span style="color: #ce3559;">:</span> session.user,',
          '45         impersonator<span style="color: #ce3559;">:</span> session.impersonator,',
          '46       },',
          '47       { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },',
          '48     );',
          '49 ',
          '50     <span style="color: #8b8d98;">// Update the cookie</span>',
          '51     res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {',
          '52       path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,',
          '53       httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '54       secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '55       sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,',
          '56     });',
          '57 ',
          '58     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '59   } <span style="color: #148a68;">catch</span> (e) {',
          '60     <span style="color: #8b8d98;">// Failed to refresh access token, redirect user to login page</span>',
          '61     <span style="color: #8b8d98;">// after deleting the cookie</span>',
          '62     res.<span style="color: #5854c6;">clearCookie</span>(<span style="color: #143465;">\'wos-session\'</span>);',
          '63     res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '64   }',
          '65 }',
          '66 ',
          '67 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">getSessionFromCookie</span>(cookies) {',
          '68   <span style="color: #148a68;">const</span> cookie <span style="color: #ce3559;">=</span> cookies[<span style="color: #143465;">\'wos-session\'</span>];',
          '69 ',
          '70   <span style="color: #148a68;">if</span> (cookie) {',
          '71     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">unsealData</span>(cookie, {',
          '72       password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span>,',
          '73     });',
          '74   }',
          '75 }',
          '76 ',
          '77 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">verifyAccessToken</span>(accessToken) {',
          '78   <span style="color: #148a68;">try</span> {',
          '79     <span style="color: #148a68;">await</span> <span style="color: #5854c6;">jwtVerify</span>(accessToken, <span style="color: #0072dd;">JWKS</span>);',
          '80     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">true</span>;',
          '81   } <span style="color: #148a68;">catch</span> (e) {',
          '82     <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">warn</span>(<span style="color: #143465;">\'Failed to verify session:\'</span>, e);',
          '83     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">false</span>;',
          '84   }',
          '85 }',
        ],
        nodesdk: [
          '1 <span style="color: #8b8d98;">// Javascript Object Signing and Encryption (JOSE)</span>',
          '2 <span style="color: #8b8d98;">// https://www.npmjs.com/package/jose</span>',
          '3 <span style="color: #148a68;">import</span> { createRemoteJWKSet, jwtVerify } from <span style="color: #143465;">\'jose\'</span>;',
          '4 ',
          '5 <span style="color: #148a68;">const</span< clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '6 ',
          '7 <span style="color: #8b8d98;">// Set the JWKS URL. This is used to verify if the JWT is still valid</span>',
          '8 <span style="color: #148a68;">const</span> <span style="color: #0072dd;">JWKS</span> <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">createRemoteJWKSet</span>(',
          '9   <span style="color: #148a68;">new</span> <span style="color: #5854c6;">URL</span>(workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getJwksUrl</span>(clientId)),',
          '10 );',
          '11 ',
          '12 <span style="color: #8b8d98;">// Auth middleware function</span>',
          '13 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">withAuth</span>(req, res, next) {',
          '14   <span style="color: #8b8d98;">// First, attempt to get the session from the cookie</span>',
          '15   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>>req.cookies);',
          '16 ',
          '17   <span style="color: #8b8d98;">// If no session, redirect the user to the login page</span>',
          '18   <span style="color: #148a68;">if</span> (<span style="color: #ce3559;">!</span>session) {',
          '19     <span style="color: #148a68;">return</span> res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '20   }',
          '21 ',
          '22   <span style="color: #148a68;">const</span> hasValidSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">verifyAccessToken</span>(session.accessToken);',
          '23 ',
          '24   <span style="color: #8b8d98;">// If the session is valid, move on to the next function</span>',
          '25   <span style="color: #148a68;">if</span> (hasValidSession) {',
          '26     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '27   }',
          '28 ',
          '29   <span style="color: #148a68;">try</span> {',
          '30     <span style="color: #8b8d98;">// If the session is invalid (i.e. the access token has expired)</span>',
          '31     <span style="color: #8b8d98;">// attempt to re-authenticate with the refresh token</span>',
          '32     <span style="color: #148a68;">const</span> { accessToken, refreshToken } <span style="color: #ce3559;">=</span>',
          '33       <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithRefreshToken</span>({',
          '34         clientId,',
          '35         refreshToken<span style="color: #ce3559;">:</span> session.refreshToken,',
          '36       });',
          '37 ',
          '38     <span style="color: #8b8d98;">// Refresh tokens are single use, so update the session with the</span>',
          '39     <span style="color: #8b8d98;">// new access and refresh tokens</span>',
          '40     <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(',
          '41       {',
          '42         accessToken,',
          '43         refreshToken,',
          '44         user<span style="color: #ce3559;">:</span> session.user,',
          '45         impersonator<span style="color: #ce3559;">:</span> session.impersonator,',
          '46       },',
          '47       { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },',
          '48     );',
          '49 ',
          '50     <span style="color: #8b8d98;">// Update the cookie</span>',
          '51     res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {',
          '52       path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,',
          '53       httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '54       secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '55       sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,',
          '56     });',
          '57 ',
          '58     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '59   } <span style="color: #148a68;">catch</span> (e) {',
          '60     <span style="color: #8b8d98;">// Failed to refresh access token, redirect user to login page</span>',
          '61     <span style="color: #8b8d98;">// after deleting the cookie</span>',
          '62     res.<span style="color: #5854c6;">clearCookie</span>(<span style="color: #143465;">\'wos-session\'</span>);',
          '63     res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '64   }',
          '65 }',
          '66 ',
          '67 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">getSessionFromCookie</span>(cookies) {',
          '68   <span style="color: #148a68;">const</span> cookie <span style="color: #ce3559;">=</span> cookies[<span style="color: #143465;">\'wos-session\'</span>];',
          '69 ',
          '70   <span style="color: #148a68;">if</span> (cookie) {',
          '71     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">unsealData</span>(cookie, {',
          '72       password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span>,',
          '73     });',
          '74   }',
          '75 }',
          '76 ',
          '77 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">verifyAccessToken</span>(accessToken) {',
          '78   <span style="color: #148a68;">try</span> {',
          '79     <span style="color: #148a68;">await</span> <span style="color: #5854c6;">jwtVerify</span>(accessToken, <span style="color: #0072dd;">JWKS</span>);',
          '80     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">true</span>;',
          '81   } <span style="color: #148a68;">catch</span> (e) {',
          '82     <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">warn</span>(<span style="color: #143465;">\'Failed to verify session:\'</span>, e);',
          '83     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">false</span>;',
          '84   }',
          '85 }',
        ],
        openssl: [
          '1 <span style="color: #8b8d98;">// Javascript Object Signing and Encryption (JOSE)</span>',
          '2 <span style="color: #8b8d98;">// https://www.npmjs.com/package/jose</span>',
          '3 <span style="color: #148a68;">import</span> { createRemoteJWKSet, jwtVerify } from <span style="color: #143465;">\'jose\'</span>;',
          '4 ',
          '5 <span style="color: #148a68;">const</span< clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '6 ',
          '7 <span style="color: #8b8d98;">// Set the JWKS URL. This is used to verify if the JWT is still valid</span>',
          '8 <span style="color: #148a68;">const</span> <span style="color: #0072dd;">JWKS</span> <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">createRemoteJWKSet</span>(',
          '9   <span style="color: #148a68;">new</span> <span style="color: #5854c6;">URL</span>(workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getJwksUrl</span>(clientId)),',
          '10 );',
          '11 ',
          '12 <span style="color: #8b8d98;">// Auth middleware function</span>',
          '13 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">withAuth</span>(req, res, next) {',
          '14   <span style="color: #8b8d98;">// First, attempt to get the session from the cookie</span>',
          '15   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>>req.cookies);',
          '16 ',
          '17   <span style="color: #8b8d98;">// If no session, redirect the user to the login page</span>',
          '18   <span style="color: #148a68;">if</span> (<span style="color: #ce3559;">!</span>session) {',
          '19     <span style="color: #148a68;">return</span> res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '20   }',
          '21 ',
          '22   <span style="color: #148a68;">const</span> hasValidSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">verifyAccessToken</span>(session.accessToken);',
          '23 ',
          '24   <span style="color: #8b8d98;">// If the session is valid, move on to the next function</span>',
          '25   <span style="color: #148a68;">if</span> (hasValidSession) {',
          '26     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '27   }',
          '28 ',
          '29   <span style="color: #148a68;">try</span> {',
          '30     <span style="color: #8b8d98;">// If the session is invalid (i.e. the access token has expired)</span>',
          '31     <span style="color: #8b8d98;">// attempt to re-authenticate with the refresh token</span>',
          '32     <span style="color: #148a68;">const</span> { accessToken, refreshToken } <span style="color: #ce3559;">=</span>',
          '33       <span style="color: #148a68;">await</span> workos.userManagement.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">authenticateWithRefreshToken</span>({',
          '34         clientId,',
          '35         refreshToken<span style="color: #ce3559;">:</span> session.refreshToken,',
          '36       });',
          '37 ',
          '38     <span style="color: #8b8d98;">// Refresh tokens are single use, so update the session with the</span>',
          '39     <span style="color: #8b8d98;">// new access and refresh tokens</span>',
          '40     <span style="color: #148a68;">const</span> encryptedSession <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">sealData</span>(',
          '41       {',
          '42         accessToken,',
          '43         refreshToken,',
          '44         user<span style="color: #ce3559;">:</span> session.user,',
          '45         impersonator<span style="color: #ce3559;">:</span> session.impersonator,',
          '46       },',
          '47       { password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span> },',
          '48     );',
          '49 ',
          '50     <span style="color: #8b8d98;">// Update the cookie</span>',
          '51     res.<span style="color: #5854c6;">cookie</span>(<span style="color: #143465;">\'wos-session\'</span>, encryptedSession, {',
          '52       path<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'/\'</span>,',
          '53       httpOnly<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '54       secure<span style="color: #ce3559;">:</span> <span style="color: #0072dd;">true</span>,',
          '55       sameSite<span style="color: #ce3559;">:</span> <span style="color: #143465;">\'lax\'</span>,',
          '56     });',
          '57 ',
          '58     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">next</span>();',
          '59   } <span style="color: #148a68;">catch</span> (e) {',
          '60     <span style="color: #8b8d98;">// Failed to refresh access token, redirect user to login page</span>',
          '61     <span style="color: #8b8d98;">// after deleting the cookie</span>',
          '62     res.<span style="color: #5854c6;">clearCookie</span>(<span style="color: #143465;">\'wos-session\'</span>);',
          '63     res.<span style="color: #5854c6;">redirect</span>(<span style="color: #143465;">\'/login\'</span>);',
          '64   }',
          '65 }',
          '66 ',
          '67 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">getSessionFromCookie</span>(cookies) {',
          '68   <span style="color: #148a68;">const</span> cookie <span style="color: #ce3559;">=</span> cookies[<span style="color: #143465;">\'wos-session\'</span>];',
          '69 ',
          '70   <span style="color: #148a68;">if</span> (cookie) {',
          '71     <span style="color: #148a68;">return</span> <span style="color: #5854c6;">unsealData</span>(cookie, {',
          '72       password<span style="color: #ce3559;">:</span> process.env.<span style="color: #0072dd;">WORKOS_COOKIE_PASSWORD</span>,',
          '73     });',
          '74   }',
          '75 }',
          '76 ',
          '77 <span style="color: #148a68;">async function</span> <span style="color: #5854c6;">verifyAccessToken</span>(accessToken) {',
          '78   <span style="color: #148a68;">try</span> {',
          '79     <span style="color: #148a68;">await</span> <span style="color: #5854c6;">jwtVerify</span>(accessToken, <span style="color: #0072dd;">JWKS</span>);',
          '80     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">true</span>;',
          '81   } <span style="color: #148a68;">catch</span> (e) {',
          '82     <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">warn</span>(<span style="color: #143465;">\'Failed to verify session:\'</span>, e);',
          '83     <span style="color: #148a68;">return</span> <span style="color: #0072dd;">false</span>;',
          '84   }',
          '85 }',
        ]
      },
      apiEpxlainers: {
        authenticateWithRefreshToken_javascript: [
          'userManagement.<span style="color: #5854c6;">authenticateWithRefreshToken</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refresh_token<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '}'
        ],
        authenticateWithRefreshToken_nextjs: [
          'userManagement.<span style="color: #5854c6;">authenticateWithRefreshToken</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refresh_token<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '}'
        ],
        authenticateWithRefreshToken_nodesdk: [
          'userManagement.<span style="color: #5854c6;">authenticateWithRefreshToken</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refresh_token<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '}'
        ],
        authenticateWithRefreshToken_openssl: [
          'userManagement.<span style="color: #5854c6;">authenticateWithRefreshToken</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  refresh_token<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  ipAddress<span style="color: #ce3559;">?:</span> string</span>;',
          '  userAgent<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> {',
          '  accessToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '  refreshToken<span style="color: #ce3559;">:</span> <span style="color: #148a68;">String</span>;',
          '}'
        ],
        getJwksUrl_javascript: [
          'userManagement.<span style="color: #5854c6;">getJwksUrl</span><span style="color: #ce3559;">:</span> (clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>'
        ],
        getJwksUrl_nodesdk: [
          'userManagement.<span style="color: #5854c6;">getJwksUrl</span><span style="color: #ce3559;">:</span> (clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>'
        ],
        getJwksUrl_nextjs: [
          'userManagement.<span style="color: #5854c6;">getJwksUrl</span><span style="color: #ce3559;">:</span> (clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>'
        ],
        getJwksUrl_openssl: [
          'userManagement.<span style="color: #5854c6;">getJwksUrl</span><span style="color: #ce3559;">:</span> (clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>'
        ]
      }
    },

    { //* Add middleware to route
      id: 15,
      title: "Add middleware to route",
      code: {
        javascript: [
          '1 <span style="color: #8b8d98;">// Specify the `withAuth` middleware function we defined earlier to protect this route</span>',
          '2 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/dashboard\'</span>, withAuth, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '3   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>(req.cookies);',
          '4 ',
          '5   <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">log</span>(<span style="color: #143465;">`User</span> ${session.user.firstName} <span style="color: #143465;">is logged in`</span>);',
          '6 ',
          '7   <span style="color: #8b8d98;">// ... render dashboard page</span>',
          '8 });',
        ],
        nodesdk: [
          '1 <span style="color: #8b8d98;">// Specify the `withAuth` middleware function we defined earlier to protect this route</span>',
          '2 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/dashboard\'</span>, withAuth, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '3   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>(req.cookies);',
          '4 ',
          '5   <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">log</span>(<span style="color: #143465;">`User</span> ${session.user.firstName} <span style="color: #143465;">is logged in`</span>);',
          '6 ',
          '7   <span style="color: #8b8d98;">// ... render dashboard page</span>',
          '8 });',
        ],
        nextjs: [
          '1 <span style="color: #8b8d98;">// Specify the `withAuth` middleware function we defined earlier to protect this route</span>',
          '2 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/dashboard\'</span>, withAuth, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '3   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>(req.cookies);',
          '4 ',
          '5   <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">log</span>(<span style="color: #143465;">`User</span> ${session.user.firstName} <span style="color: #143465;">is logged in`</span>);',
          '6 ',
          '7   <span style="color: #8b8d98;">// ... render dashboard page</span>',
          '8 });',
        ],
        openssl: [
          '1 <span style="color: #8b8d98;">// Specify the `withAuth` middleware function we defined earlier to protect this route</span>',
          '2 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/dashboard\'</span>, withAuth, <span style="color: #148a68;">async</span> (req, res) <span style="color: #ce3559;">=></span> {',
          '3   <span style="color: #148a68;">const</span> session <span style="color: #ce3559;">=</span> <span style="color: #148a68;">await</span> <span style="color: #5854c6;">getSessionFromCookie</span>(req.cookies);',
          '4 ',
          '5   <span style="color: #5854c6;">console</span>.<span style="color: #5854c6;">log</span>(<span style="color: #143465;">`User</span> ${session.user.firstName} <span style="color: #143465;">is logged in`</span>);',
          '6 ',
          '7   <span style="color: #8b8d98;">// ... render dashboard page</span>',
          '8 });',
        ]
      }
    },

    { //* Examples
      id: 16,
      title: "",
      code: {
        javascript: [
          '1 <span style="color: #8b8d98;">// extract sessionId from access token</span>',
          '2 <span style="color: #148a68;">const</span> sessionId <span style="color: #ce3559;">=</span> jose.<span style="color: #5854c6;">decodeJwt</span>(session.accessToken).sid;',
          '3 ',
          '4 <span style="color: #8b8d98;">// delete app session cookie</span>',
          '5 <span style="color: #5854c6;">cookies</span>().<span style="color: #5854c6;">delete</span>(<span style="color: #143465;">\'my-app-sesssion\'</span>);',
          '6 ',
          '7 <span style="color: #8b8d98;">// redirect to logout endpoint</span>',
          '8 <span style="color: #8b8d98;">// (the user will be redirected to your app homepage url</span>',
          '9 <span style="color: #8b8d98;">//  after the logout completes)</span>',
          '10 <span style="color: #5854c6;">redirect</span>(workos.userManagement.<span style="color: #5854c6;">getLogoutUrl</span>({ sessionId }));',
        ]
      }
    },

    { //* Impersonation component
      id: 17,
      title: "Impersonation component",
      code: {
        javascript: [
          '1 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">Impersonation</span> } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/authkit-nextjs\'</span>;',
          '2 ',
          '3 <span style="color: #148a68;">export default function</span> <span style="color: #5854c6;">RootLayout</span>({ children }) {',
          '4   <span style="color: #148a68;">return</span> (',
          '5     <span style="color: #ce3559;">&lt</span>html lang=<span style="color: #143465;">"en"</span><span style="color: #ce3559;">&gt</span>',
          '6       <span style="color: #ce3559;">&lt</span>body<span style="color: #ce3559;">&gt</span>',
          '7         <span style="color: #ce3559;">&lt</span><span style="color: #5854c6;">Impersonation</span> <span style="color: #ce3559;">/&gt</span>',
          '8         {children}',
          '9       <span style="color: #ce3559;">&lt/</span>body<span style="color: #ce3559;">&gt</span>',
          '10    <span style="color: #ce3559;">&lt/</span>html<span style="color: #ce3559;">&gt</span>',
          '11   );',
          '12 }',
        ]
      }
    },


          //! - - STANDALONE APIs - - !//

    { //* Authentication endpoint
      id: 18,
      title: "Authentication endpoint",
      doubleHeaders: {
        javascript: [
          {lang1: "Next.js", lang2: "Express"}
        ],
        nextjs: [
          {lang1: "Next.js", lang2: "Express"}
        ],
        express: [
          {lang1: "Next.js", lang2: "Express"}
        ]
      },
      code: {
        javascript: [
          '1 <span style="color: #148a68;">import</span> type { <span style="color: #5854c6;">NextApiRequest</span>, <span style="color: #5854c6;">NextApiResponse</span> } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'next\'</span>;',
          '2 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/node\'</span>;',
          '3 ',
          '4 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '5 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '6 ',
          '7 <span style="color: #148a68;">export default</span> (_req<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">NextApiRequest</span>, res<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">NextApiResponse</span>) <span style="color: #ce3559;">=></span> {',
          '8  <span style="color: #8b8d98;">// Use the Test Organization ID to get started. Replace it with</span>',
          '9  <span style="color: #8b8d98;">// the user’s real organization ID when you finish the integration.</span>',
          '10  <span style="color: #148a68;">const</span> organization <span style="color: #ce3559;">=</span> <span style="color: #143465;">\'org_test_idp\'</span>;',
          '11',
          '12   <span style="color: #8b8d98;">// The callback URI WorkOS should redirect to after the authentication</span>',
          '13   <span style="color: #148a68;">const</span> redirectURI <span style="color: #ce3559;">=</span> <span style="color: #143465;">\'https://dashboard.my-app.com\'</span>;',
          '14 ',
          '15   <span style="color: #148a68;">const</span> authorizationUrl <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getAuthorizationUrl</span>({',
          '16     organization,',
          '17     redirectURI,',
          '18     clientId,',
          '19   });',
          '20 ',
          '21   res.<span style="color: #5854c6;">redirect</span>(authorizationUrl);',
          '22 };',
        ],
        nextjs: [
          '1 <span style="color: #148a68;">import</span> type { <span style="color: #5854c6;">NextApiRequest</span>, <span style="color: #5854c6;">NextApiResponse</span> } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'next\'</span>;',
          '2 <span style="color: #148a68;">import</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #148a68;">from</span> <span style="color: #143465;">\'@workos-inc/node\'</span>;',
          '3 ',
          '4 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> <span style="color: #148a68;">new</span> <span style="color: #5854c6;">WorkOS</span>(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '5 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '6 ',
          '7 <span style="color: #148a68;">export default</span> (_req<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">NextApiRequest</span>, res<span style="color: #ce3559;">:</span> <span style="color: #5854c6;">NextApiResponse</span>) <span style="color: #ce3559;">=></span> {',
          '8  <span style="color: #8b8d98;">// Use the Test Organization ID to get started. Replace it with</span>',
          '9  <span style="color: #8b8d98;">// the user’s real organization ID when you finish the integration.</span>',
          '10   <span style="color: #148a68;">const</span> organization <span style="color: #ce3559;">=</span> <span style="color: #143465;">\'org_test_idp\'</span>;',
          '11',
          '12   <span style="color: #8b8d98;">// The callback URI WorkOS should redirect to after the authentication</span>',
          '13   <span style="color: #148a68;">const</span> redirectURI <span style="color: #ce3559;">=</span> <span style="color: #143465;">\'https://dashboard.my-app.com\'</span>;',
          '14 ',
          '15   <span style="color: #148a68;">const</span> authorizationUrl <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getAuthorizationUrl</span>({',
          '16     organization,',
          '17     redirectURI,',
          '18     clientId,',
          '19   });',
          '20 ',
          '21   res.<span style="color: #5854c6;">redirect</span>(authorizationUrl);',
          '22 };',
        ],
        express: [
          '1 <span style="color: #148a68;">const</span> express <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'express\'</span>);',
          '2 <span style="color: #148a68;">const</span> { <span style="color: #5854c6;">WorkOS</span> } <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">require</span>(<span style="color: #143465;">\'@workos-inc/node\'</span>);',
          '3 ',
          '4 <span style="color: #148a68;">const</span> app <span style="color: #ce3559;">=</span> <span style="color: #5854c6;">express</span>();',
          '5 ',
          '6 <span style="color: #148a68;">const</span> workos <span style="color: #ce3559;">=</span> new WorkOS(process.env.<span style="color: #0072dd;">WORKOS_API_KEY</span>);',
          '7 <span style="color: #148a68;">const</span> clientId <span style="color: #ce3559;">=</span> process.env.<span style="color: #0072dd;">WORKOS_CLIENT_ID</span>;',
          '8 ',
          '9 app.<span style="color: #5854c6;">get</span>(<span style="color: #143465;">\'/auth\'</span>, (_req, res) <span style="color: #ce3559;">=></span> {',
          '10   <span style="color: #8b8d98;">// Use the Test Organization ID to get started. Replace it with</span>',
          '11   <span style="color: #8b8d98;">// the user’s real organization ID when you finish the integration.</span>',
          '12   <span style="color: #148a68;">const</span> organization <span style="color: #ce3559;">=</span> <span style="color: #143465;">\'org_test_idp\'</span>;',
          '13 ',
          '14   <span style="color: #8b8d98;">// The callback URI WorkOS should redirect to after the authentication</span>',
          '15   <span style="color: #148a68;">const</span> redirectURI <span style="color: #ce3559;">=</span> <span style="color: #143465;">\'https://dashboard.my-app.com\'</span>;',
          '16 ',
          '17   <span style="color: #148a68;">const</span> authorizationUrl <span style="color: #ce3559;">=</span> workos.sso.<span style="background-color: #f5f5ff; color: #6e6bce; padding: 0.2%; border-radius: 5px;" onmouseover="this.style.textDecoration=\'underline\'; this.style.cursor=\'pointer\';" onmouseout="this.style.textDecoration=\'none\';">getAuthorizationUrl</span>({',
          '18     organization,',
          '19     redirectURI,',
          '20     clientId,',
          '21   });',
          '22 ',
          '23   res.<span style="color: #5854c6;">redirect</span>(authorizationUrl);',
          '24 });',
        ]
      },
      apiEpxlainers: {
        getAuthorizationUrl_javascript: [
          'userManagement.<span style="color: #5854c6;">getAuthorizationUrl</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  redirectUri<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  connectionId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  provider<span style="color: #ce3559;">?:</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span>;',
          '  state<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  loginHint<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  domainHint<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>',
        ],
        getAuthorizationUrl_nextjs: [
          'userManagement.<span style="color: #5854c6;">getAuthorizationUrl</span><span style="color: #ce3559;">:</span> (options<span style="color: #ce3559;">:</span> {',
          '  redirectUri<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  clientId<span style="color: #ce3559;">:</span> <span style="color: #148a68;">string</span>;',
          '  connectionId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  organizationId<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  provider<span style="color: #ce3559;">?:</span> <span style="color: #143465;">"GoogleOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"MicrosoftOAuth"</span> <span style="color: #ce3559;">|</span> <span style="color: #143465;">"GitHubOAuth"</span>;',
          '  state<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  loginHint<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '  domainHint<span style="color: #ce3559;">?:</span> <span style="color: #148a68;">string</span>;',
          '}) <span style="color: #ce3559;">=></span> <span style="color: #148a68;">string</span>',
        ]
      }
    }

]

export default codeSnippets;



